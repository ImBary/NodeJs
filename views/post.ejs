<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>POST</title>
</head>
<body>
<h2>POST</h2>
<p>Title: <%= post.title %></p>
<p>Content: <%= post.content %></p>

<form id="deletePostForm" action="/posts/<%= post.id %>" method="POST" style="display: inline">
    <input type="hidden" name="_method" value="DELETE">
    <button type="submit">Delete Post</button>
</form>


<button id="editButton">Edit Post</button>

<form id="updatePostForm" action="/post/<%= post.id %>" method="POST" style="display: none;">
    <input type="hidden" name="_method" value="PUT">
    <label for="content">New Content:</label>
    <input type="text" id="content" name="content">
    <label for="title">New Title:</label>
    <input type="text" id="title" name="title">
    <button type="submit" id="updateButton">Update Post</button>
</form>

<form action="/" method="GET" style="display: inline;">
    <button type="submit">Back</button>
</form>
<script>
    document.getElementById('deletePostForm').addEventListener('submit', function(event) {
        event.preventDefault();
        const confirmation = confirm("Are you sure you want to delete this post?");
        if (confirmation) {
            const form = this;
            fetch(form.action, {
                method: 'DELETE', 
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({}) // Empty body for DELETE request
            })
            .then(response => {
                if (response.ok || response.redirected) {
                    window.location.href = response.url || '/'; // If redirected, use the redirected URL
                } else {
                    throw new Error('Failed to delete post');
                }
            })
            .catch(error => {
                console.error('Error deleting post:', error);
                // Handle error (e.g., show error message to user)
            });
        }
    });
</script>
<script>
    document.getElementById('updatePostForm').addEventListener('submit', function(event) {
        event.preventDefault(); // Prevent default form submission

        // Get confirmation from the user
        const confirmation = confirm("Are you sure you want to update this post?");
        const contentValue = document.getElementById('content').value;
        const titleValue = document.getElementById('title').value;
        console.log("ejs content"+contentValue);
        if (confirmation) {
            // If user confirms, proceed with the form submission
            const form = this;
            // Send a PUT request
            fetch(form.action, {
                method: 'PUT', // Use PUT method
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({
                    content: contentValue, // Get the content from the form
                    title : titleValue
                })
            })
            .then(response => {
                // Check if the request was successful or redirected
                if (response.ok || response.redirected) {
                    window.location.reload() // If redirected, navigate to the redirected URL
                } else {
                    throw new Error('Failed to update post');
                }
            })
            .catch(error => {
                console.error('Error updating post:', error);
                // Handle error (e.g., show error message to user)
            });
        }
    });
</script>

<script>
    // Get the current post content from the server-side
    const currentContent = "<%= post.content %>";
    const currentTitle = "<%= post.title%>";
    // Set the value of the content input field to the current post content
    document.getElementById('content').value = currentContent;
    document.getElementById('title').value = currentTitle;
</script>

<script>
    const editButton = document.getElementById('editButton');
    // Get the form
    const updatePostForm = document.getElementById('updatePostForm');

    // Add click event listener to the edit button
    editButton.addEventListener('click', function() {
        // Toggle the visibility of the form
        if (updatePostForm.style.display === 'none') {
            updatePostForm.style.display = 'block';
        } else {
            updatePostForm.style.display = 'none';
        }
    });

</script>

</body>
</html>
